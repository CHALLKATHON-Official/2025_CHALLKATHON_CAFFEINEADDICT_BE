# HTTP 서버 (Certbot 인증용 + HTTPS 리다이렉션)
server {
    listen 80;
    server_name ${DOMAIN_NAME} dev.${DOMAIN_NAME};

    # Certbot webroot 경로
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # 나머지 모든 요청을 HTTPS로 리다이렉션
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 서버
server {
    listen 443 ssl http2;
    server_name ${DOMAIN_NAME} dev.${DOMAIN_NAME};

    # SSL 인증서
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;

    # SSL 보안 설정
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384";

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # 클라이언트 업로드 크기 제한
    client_max_body_size 10M;

    # API 엔드포인트에 대한 Rate Limiting
    location /api/auth {
        limit_req zone=login burst=3 nodelay;
        proxy_pass http://momento_backend;
        include /etc/nginx/conf.d/proxy_params;
    }

    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://momento_backend;
        include /etc/nginx/conf.d/proxy_params;
    }

    # 헬스체크 엔드포인트
    location /actuator/health {
        access_log off;
        proxy_pass http://momento_backend;
        include /etc/nginx/conf.d/proxy_params;
    }

    # 정적 파일 서빙 (필요한 경우)
    location /static/ {
        alias /var/www/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # 메인 애플리케이션
    location / {
        proxy_pass http://momento_backend;
        include /etc/nginx/conf.d/proxy_params;
        
        # WebSocket 지원 (필요한 경우)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # 에러 페이지
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}