spring:
  # 로컬 개발용 데이터베이스 설정
  datasource:
    url: jdbc:mysql://localhost:3306/momento_db?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: root
    password: ehdfprl77
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      pool-name: HikariCP-Local
  # Redis 설정 (로컬 개발용)
  data:
    redis:
      host: localhost
      port: 6379

  # JPA 설정 (로컬 개발용)
  jpa:
    hibernate:
      ddl-auto: create  # 스키마 변경 없음 (기존 DB 구조 유지)
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          lob:
            non_contextual_creation: true

# 앱 설정 (로컬 개발용)
app:
  oauth2:
    authorized-redirect-uris:
      - "http://localhost:3000"
      - "http://localhost:3000/oauth2/redirect"
  cors:
    allowed-origins:
      - "http://localhost:3000"
  cookie:
    refresh-token:
      name: refreshToken
      max-age: 604800  # 7일
      domain: localhost
      secure: false  # HTTP에서는 false
      http-only: true
      same-site: lax

openai:
  api-key: ${OPENAI_API_KEY}
  model: gpt-4o-mini
  max-tokens: 300
  temperature: 0.8

# 서버 설정 (로컬용)
server:
  port: 8080
  error:
    include-stacktrace: always
    include-message: always
    include-binding-errors: always

# 로깅 설정 (로컬 개발용 - 상세 로깅)
logging:
  level:
    # 프로젝트 전체 로깅
    com.challkathon.momento: DEBUG
    
    # 인증 관련 상세 로깅
    com.challkathon.momento.auth: TRACE
    com.challkathon.momento.auth.filter: TRACE
    com.challkathon.momento.auth.service: DEBUG
    com.challkathon.momento.auth.handler: DEBUG
    
    # Spring Security 상세 로깅
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: TRACE
    org.springframework.security.oauth2.client: TRACE
    org.springframework.security.web: DEBUG
    org.springframework.security.web.authentication: DEBUG
    org.springframework.security.web.FilterChainProxy: DEBUG
    org.springframework.security.web.access.intercept.FilterSecurityInterceptor: DEBUG
    
    # JWT 처리 로깅
    io.jsonwebtoken: DEBUG
    
    # CORS 관련 로깅
    org.springframework.web.cors: DEBUG
    
    # MySQL/JPA 로깅
    org.springframework.orm.jpa: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.transaction: DEBUG
    
    # Root 레벨
    root: INFO

  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Swagger 설정 (로컬용 - 모든 기능 활성화)
springdoc:
  swagger-ui:
    enabled: true
    try-it-out-enabled: true
  api-docs:
    enabled: true

# 액추에이터 설정 (로컬용 - 개발 편의를 위해 더 많은 엔드포인트 노출)
management:
  endpoints:
    web:
      exposure:
        include: health,info,env,configprops,beans,metrics
  endpoint:
    health:
      show-details: always
    env:
      show-values: always

  # Cache 설정 (로컬용)
  cache:
    redis:
      time-to-live: 3600000  # 1시간 (로컬 개발용)
      cache-null-values: false
      key-prefix: "momento:local:"
      use-key-prefix: true

  # 개발 편의 설정
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true